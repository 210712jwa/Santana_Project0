package com.santa.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.santa.dto.AddOrEditClientDTO;
import com.santa.model.Client;
import com.santa.util.ConnectionUtility;

public class ClientDAOImpl implements ClientDAO {

	@Override
	public List<Client> getAllClients() throws SQLException {
		
		List<Client> clients = new ArrayList<>();
		

		try (Connection con = ConnectionUtility.getConnection()) {

			Statement stmt = con.createStatement();
			
			String sql = "SELECT * FROM project0.client";
			ResultSet rs = stmt.executeQuery(sql);
			
			while (rs.next()) {
				
				int id = rs.getInt("id");
				String name = rs.getString("name");
				int age = rs.getInt("age");
				
				Client client = new Client(id, name, age);
				
				clients.add(client);
			}
		}
		
		return clients;
	}

	@Override
	public Client getClientById(int id) throws SQLException{
		try (Connection con = ConnectionUtility.getConnection()) {
			String sql = "SELECT * FROM project0.client WHERE id = ?";

			PreparedStatement pstmt = con.prepareStatement(sql);
			
			pstmt.setInt(1, id);
			
			ResultSet rs = pstmt.executeQuery();
			

			if (rs.next()) {
				int client_id = rs.getInt("id");
				String name = rs.getString("name");
				int age = rs.getInt("age");
				
				Client client = new Client(client_id, name, age);
				
				return client;
			} else {
				return null;
			}
		}
	}

	@Override
	public Client addClient(AddOrEditClientDTO client) throws SQLException{
		try (Connection con = ConnectionUtility.getConnection()) {
			String sql = "INSERT INTO project0.client (name, age) VALUES (?, ?)";
			PreparedStatement pstmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			
			pstmt.setString(1, client.getName());
			pstmt.setInt(2, client.getAge());
			
			int recordsUpdated = pstmt.executeUpdate(); 
			if (recordsUpdated != 1) {
				throw new SQLException("Could not insert a client record");
			}
			

			ResultSet generatedKeys = pstmt.getGeneratedKeys();
			if (generatedKeys.next()) {
				Client createdClient = new Client(generatedKeys.getInt(1), client.getName(), client.getAge());
				
				return createdClient;
			} else {
				throw new SQLException("Autogenerated id could not be obtained for Client");
			}
			
		}
	}

	@Override
	public Client editClient(int clientId, AddOrEditClientDTO client) throws SQLException{
		try (Connection con = ConnectionUtility.getConnection()) {
			String sql = "UPDATE project0.client SET name = ?, age = ? WHERE id = ?";
			PreparedStatement pstmt = con.prepareStatement(sql);
			
			pstmt.setString(1, client.getName());
			pstmt.setInt(2, client.getAge());
			pstmt.setInt(3, clientId);
			
			int recordsUpdated = pstmt.executeUpdate();
			if (recordsUpdated != 1) {
				throw new SQLException("Record was not able to be updated");
			}
			
			return new Client(clientId, client.getName(), client.getAge());
		}
	}

	@Override
	public void deleteClient(int clientId) throws SQLException {
		
		try (Connection con = ConnectionUtility.getConnection()) {
			String sql = "DELETE FROM project0.client WHERE id = ?";
			PreparedStatement pstmt = con.prepareStatement(sql);
			
			pstmt.setInt(1, clientId);
			
			int recordsDeleted = pstmt.executeUpdate();
			
			if (recordsDeleted != 1) {
				throw new SQLException("Record was not able to be deleted");
			}
		}
	}

}

